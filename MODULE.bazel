module(
    name = "logos-app-template",
    version = "0.0.1",
)

bazel_dep(name = "platforms", version = "0.0.10")

use_extension("@bazel_tools//tools/module_profiles:git.bzl", "git_override")

bazel_dep(name = "logos", version = "0.0.1")
#git_override(
#    module_name = "logos",
#    commit = "04cf203089306308bc3bedc144d4c1d4c049c17f",
#    init_submodules = True,
#    remote = "git@github.com:logos-devs/logos.git",
#)

local_path_override(
    module_name = "logos",
    path = "/home/trinque/src/logos",
)

#bazel_dep(name = "logos_auth_cognito", version = "0.0.1")

#git_override(
#    module_name = "logos_auth_cognito",
#    #commit = "",
#    init_submodules = True,
#    remote = "git@github.com:logos-devs/logos-auth-cognito.git",
#)

# aspect_bazel_lib
bazel_dep(
    name = "aspect_bazel_lib",
    version = "2.7.7",
)

# grpc-java
bazel_dep(name = "grpc-java", version = "1.64.0", repo_name = "io_grpc_grpc_java")

# pnpm
bazel_dep(name = "rules_nodejs", version = "6.2.0")
bazel_dep(name = "aspect_rules_js", version = "2.0.1")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain()

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    #dev_dependency = True,
)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
use_repo(pnpm, "pnpm")

# aspect_rules_swc
bazel_dep(name = "aspect_rules_swc", version = "2.0.0-rc1")

# rules_rollup
bazel_dep(name = "aspect_rules_rollup", version = "2.0.0-rc0")

rollup_ext = use_extension("@aspect_rules_rollup//rollup:extensions.bzl", "ext")
rollup_ext.deps()

# protobuf
bazel_dep(name = "protobuf", version = "23.1", repo_name = "com_google_protobuf")

# rules_jvm_external
bazel_dep(name = "rules_jvm_external", version = "6.2")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "maven_logos",
    artifacts = [
        # deps from the framework are merged with any deps specified here
    ],
    fail_if_repin_required = True,
    fetch_javadoc = True,
    fetch_sources = True,
    generate_compat_repositories = True,
    # REPIN=1 bazel run @maven_logos//:pin
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo.maven.apache.org/maven2/",
    ],
    version_conflict_policy = "pinned",
)
use_repo(maven, "maven_logos")
